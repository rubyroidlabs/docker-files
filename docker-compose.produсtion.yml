version: '3'

services:
  postgres:
    restart: always
    logging:
      driver: journald
    volumes:
      - /var/www/PROJECT/postgresql/data:/var/lib/postgresql/data
    environment: &postgres_env
      POSTGRES_DB: DB
      POSTGRES_USER: USER
      POSTGRES_PASSWORD: PASSWORD

  redis:
    volumes:
    - /var/www/PROJECT/redis/data:/data

  nginx:
    build:
      args:
        ENV: production
    restart: always
    logging:
      driver: journald
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/www/PROJECT/public:/public
      - /etc/letsencrypt:/letsencrypt

  frontend:
    build:
      args:
        BRANCH: master
    logging:
      driver: journald
    environment:
      API_HOSTNAME: localhost:3000
      WEBPACK_BUILD_ENV: development

  backend:
    build:
      args:
        <<: *backend_env
        BRANCH: master
        RAILS_ENV: production
    restart: always
    logging:
      driver: journald
    expose:
      - 3000
    environment: &backend_env
      <<: *postgres_env
      SECRET_KEY_BASE: SECRET_KEY_BASE
      REDIS_URL: redis://redis:6379/1
      POSTGRES_HOST: postgres
      TERM: xterm-256color
      RAILS_ENV: production
      HOSTNAME: localhost:3000
      SOME_KEY: KEY

  sidekiq:
    restart: always
    logging:
      driver: journald
    environment:
      <<: *backend_env

  cron:
    image: PROJECT/backend
    restart: always
    logging:
      driver: journald
    depends_on:
      - postgres
      - redis
    environment:
      <<: *backend_env
    command: sh -c './docker.db-check.sh && whenever --update-crontab && exec cron -f'
    stop_signal: SIGINT
